// const { Telegraf } = require('telegraf');
// const { Pool } = require('pg');

// const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);
// const pool = new Pool({
//     connectionString: process.env.DATABASE_URL,
//     ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
// });

// // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–ø–ª–∞—Ç—ã
// bot.action(/withdraw_approve_(\d+)/, async (ctx) => {
//     try {
//         const requestId = ctx.match[1];
        
//         // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
//         await pool.query(`
//             UPDATE withdrawal_requests 
//             SET status = 'completed', completed_at = CURRENT_TIMESTAMP 
//             WHERE id = $1
//         `, [requestId]);
        
//         // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
//         await ctx.editMessageText(
//             `‚úÖ –í—ã–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞\nüÜî ID: ${requestId}\n‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`,
//             { reply_markup: { inline_keyboard: [] } }
//         );
        
//         await ctx.answerCbQuery('‚úÖ –í—ã–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞');
//     } catch (error) {
//         console.error('Error approving withdrawal:', error);
//         await ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è');
//     }
// });

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã–≤–æ–¥–µ
// async function sendWithdrawalNotification(username, amount, requestId) {
//     try {
//         const message = `üí∏ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥:
// üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${username}
// üí∞ –°—É–º–º–∞: ${amount} ‚≠ê
// üÜî ID: ${requestId}
// ‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`;

//         await bot.telegram.sendMessage(
//             process.env.CHANNEL_ID,
//             message,
//             {
//                 reply_markup: {
//                     inline_keyboard: [
//                         [
//                             {
//                                 text: '‚úÖ –ü–µ—Ä–µ—á–∏—Å–ª–∏–ª',
//                                 callback_data: `withdraw_approve_${requestId}`
//                             }
//                         ]
//                     ]
//                 }
//             }
//         );
//     } catch (error) {
//         console.error('Error sending Telegram notification:', error);
//     }
// }

// module.exports = { bot, sendWithdrawalNotification };