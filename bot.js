const TelegramBot = require('node-telegram-bot-api');
const sqlite3 = require('sqlite3').verbose();
const path = require('path');
const http = require('http');

const token = '8206130580:AAG91R9Bnp2pYG0z9v1eRJmH8oZvThsN9eA';

console.log('üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ LinkGold...');

const bot = new TelegramBot(token, {polling: true});

// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±–æ–Ω—É—Å–æ–≤
const db = new sqlite3.Database(path.join(__dirname, 'bot_database.db'));

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã
db.serialize(() => {
    db.run(`CREATE TABLE IF NOT EXISTS welcome_bonuses (
        user_id INTEGER PRIMARY KEY,
        bonus_received BOOLEAN DEFAULT 0,
        received_at DATETIME DEFAULT CURRENT_TIMESTAMP
    )`);
    
    db.run(`CREATE TABLE IF NOT EXISTS referral_bonuses (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        referrer_id INTEGER NOT NULL,
        referred_id INTEGER NOT NULL,
        bonus_paid BOOLEAN DEFAULT 0,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP
    )`);
});

bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;
    const userId = msg.from.id;
    const firstName = msg.from.first_name;

    console.log('üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', text, '–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);

    if (text === '/start') {
        // –ü—Ä–æ—Å—Ç–æ–π —Å—Ç–∞—Ä—Ç –±–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
        sendWelcomeMessage(chatId, firstName, userId);
    } else if (text.startsWith('/start ')) {
        // –°—Ç–∞—Ä—Ç —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
        const startPayload = text.split(' ')[1];
        sendWelcomeMessage(chatId, firstName, userId, startPayload);
    }
});

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
function sendWelcomeMessage(chatId, firstName, userId, startPayload = null) {
    // –¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    const welcomeText = `
üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ LinkGold, ${firstName}!</b>

üöÄ <b>LinkGold</b> - —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞–Ω–∏–π –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö.

üíé <b>–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>
‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã
‚Ä¢ –ü—Ä–æ—Å—Ç—ã–µ –∑–∞–¥–∞–Ω–∏—è
‚Ä¢ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å 5‚≠ê
‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞

üí∞ <b>–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å: 5 –∑–≤—ë–∑–¥!</b>

üéØ <b>–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å:</b>
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ
2. –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è (–ø–æ–¥–ø–∏—Å–∫–∏, –ª–∞–π–∫–∏, —Ä–µ–ø–æ—Å—Ç—ã)
3. –í—ã–≤–æ–¥–∏—Ç–µ –¥–µ–Ω—å–≥–∏ –æ—Ç 50 —Ä—É–±–ª–µ–π

üì¢ <b>–¢–∞–∫–∂–µ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª</b> - —Ç–∞–º –º—ã –ø—É–±–ª–∏–∫—É–µ–º –Ω–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è –∏ –≤–∞–∂–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è!
    `;

    // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏
    const keyboard = {
        reply_markup: {
            inline_keyboard: [
                [{
                    text: "üåê –ü–ï–†–ï–ô–¢–ò –ù–ê –°–ê–ô–¢",
                    web_app: { url: "https://telegram-community1-production.up.railway.app" } // –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® –°–ê–ô–¢
                }],
                [{
                    text: "üì¢ –ü–û–î–ü–ò–°–ê–¢–¨–°–Ø –ù–ê –ö–ê–ù–ê–õ",
                    url: "https://t.me/LinkGoldChannel"
                }]
            ]
        }
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.sendMessage(chatId, welcomeText, {
        parse_mode: 'HTML',
        ...keyboard
    }).then(() => {
        console.log('‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', userId);
        
        // –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å—ã
        handleBonuses(userId, startPayload);
        
    }).catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    });
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–æ–Ω—É—Å–æ–≤
function handleBonuses(userId, startPayload = null) {
    console.log('üéÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–Ω—É—Å–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
    
    // 1. –ù–∞—á–∏—Å–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å
    giveWelcomeBonus(userId);
    
    // 2. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
    if (startPayload && startPayload.startsWith('ref_')) {
        processReferral(startPayload, userId);
    }
}

// –§—É–Ω–∫—Ü–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞
function giveWelcomeBonus(userId) {
    console.log('üí∞ –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞ –¥–ª—è:', userId);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –±–æ–Ω—É—Å
    db.get("SELECT bonus_received FROM welcome_bonuses WHERE user_id = ?", [userId], (err, row) => {
        if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ë–î:', err);
            return;
        }

        if (!row) {
            console.log('üéÅ –ù–∞—á–∏—Å–ª—è–µ–º 5‚≠ê –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', userId);
            
            // –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å —á–µ—Ä–µ–∑ API
            awardBonus(userId, 5, 'welcome');
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –±–æ—Ç–∞
            db.run("INSERT INTO welcome_bonuses (user_id, bonus_received) VALUES (?, 1)", [userId], (err) => {
                if (err) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±–æ–Ω—É—Å–∞:', err);
                } else {
                    console.log('‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î');
                }
            });
        } else {
            console.log('‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∞–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å');
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
function processReferral(referralCode, referredId) {
    const referrerId = referralCode.replace('ref_', '');
    
    console.log(`üîó –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: ${referrerId} -> ${referredId}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª —Å–≤–æ—é –∂–µ —Å—Å—ã–ª–∫—É
    if (parseInt(referrerId) === referredId) {
        console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª —Å–≤–æ—é –∂–µ —Å—Å—ã–ª–∫—É');
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ª–∏ —É–∂–µ —ç—Ç–æ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª
    db.get("SELECT * FROM referral_bonuses WHERE referred_id = ?", [referredId], (err, existing) => {
        if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞:', err);
            return;
        }

        if (!existing) {
            console.log(`üí∞ –ù–∞—á–∏—Å–ª—è–µ–º 15‚≠ê —Ä–µ—Ñ–µ—Ä–µ—Ä—É ${referrerId} –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ ${referredId}`);
            
            // –ù–∞—á–∏—Å–ª—è–µ–º 15 –∑–≤—ë–∑–¥ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º—É
            awardBonus(referrerId, 15, 'referral');
            
            // –ù–∞—á–∏—Å–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ 5 –∑–≤—ë–∑–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–º—É (–ø–æ–º–∏–º–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö)
            awardBonus(referredId, 5, 'referral_bonus');
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –±–æ—Ç–∞
            db.run("INSERT INTO referral_bonuses (referrer_id, referred_id, bonus_paid) VALUES (?, ?, 1)", 
                [referrerId, referredId], (err) => {
                    if (err) {
                        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞:', err);
                    } else {
                        console.log('‚úÖ –†–µ—Ñ–µ—Ä–∞–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î');
                    }
                });
        } else {
            console.log('‚ÑπÔ∏è –†–µ—Ñ–µ—Ä–∞–ª —É–∂–µ –±—ã–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —Ä–∞–Ω–µ–µ');
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–æ–Ω—É—Å–∞ —á–µ—Ä–µ–∑ API
function awardBonus(userId, amount, type) {
    console.log(`üéØ –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ ${amount}‚≠ê –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId} (—Ç–∏–ø: ${type})`);
    
    // –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const bonusData = {
        userId: userId,
        amount: amount,
        type: type
    };
    
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ –≤–∞—à–µ–≥–æ API –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–æ–Ω—É—Å–∞
    // –ü—Ä–∏–º–µ—Ä —Å HTTP –∑–∞–ø—Ä–æ—Å–æ–º:
    /*
    const data = JSON.stringify(bonusData);
    
    const options = {
        hostname: 'your-domain.com', // –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® –î–û–ú–ï–ù
        port: 443,
        path: '/api/user/bonus/welcome',
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        }
    };
    
    const req = http.request(options, (res) => {
        console.log(`‚úÖ –ë–æ–Ω—É—Å ${amount}‚≠ê –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    });
    
    req.on('error', (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–æ–Ω—É—Å–∞ —á–µ—Ä–µ–∑ API:', error);
    });
    
    req.write(data);
    req.end();
    */
    
    // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ API)
    console.log(`‚úÖ [API CALL] –ù–∞—á–∏—Å–ª–µ–Ω–æ ${amount}‚≠ê –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è callback –∫–Ω–æ–ø–æ–∫ (–µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è)
bot.on('callback_query', (callbackQuery) => {
    const message = callbackQuery.message;
    const data = callbackQuery.data;
    
    console.log('üîÑ Callback –ø–æ–ª—É—á–µ–Ω:', data);
    
    bot.answerCallbackQuery(callbackQuery.id);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
bot.on('polling_error', (error) => {
    console.error('‚ùå Polling error:', error);
});

console.log('ü§ñ –ë–æ—Ç LinkGold –∑–∞–ø—É—â–µ–Ω!');
console.log('üíé –§—É–Ω–∫—Ü–∏–∏:');
console.log('   ‚Ä¢ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏');
console.log('   ‚Ä¢ –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ 5‚≠ê –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é');
console.log('   ‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (15‚≠ê –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ)');
console.log('   ‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ 5‚≠ê –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–º—É –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ');